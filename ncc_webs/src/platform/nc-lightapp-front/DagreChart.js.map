{"version":3,"sources":["webpack://[name]/./src/platform/containers/DagreChart/method.js","webpack://[name]/./node_modules/_@antv_g6@2.2.6@@antv/g6/build/plugin.tool.tooltip.js","webpack://[name]/./src/platform/containers/DagreChart/Component.js"],"names":["flowFormatNode","data","map","item","index","id","act_id","label","text","name","act_name","createEdges","node","isForward","sourceEdges","source","target","targetEdges","concat","_toConsumableArray","dragNodeChangePostion","graph","dx","dy","on","ev","model","getModel","x","y","update","undefined","generateInitSelected","filter","ispassroute","equalArray","arr1","arr2","Object","prototype","toString","call","slice","JSON","stringify","t","window","module","exports","__webpack_require__","e","o","n","i","l","m","c","d","defineProperty","enumerable","get","r","Symbol","toStringTag","value","__esModule","create","bind","default","hasOwnProperty","p","s","265","configurable","writable","Util","u","this","options","arguments","length","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","forEach","getTooltip","tooltip","type","isArray","title","list","init","shape","onMouseEnter","onMouseMove","onMouseLeave","getGraphContainer","destroy","createDOM","css","position","appendChild","domX","domY","getOuterWidth","getOuterHeight","getWidth","getHeight","top","_getTop","left","_getLeft","Plugins","3","_react","_base","_method","G6","require","G6Plugins","track","DagreChart","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","getDrawDagreData","nodes","edges","_data$edges","push","apply","setState","extract","renderDagre","changeColor","state","renderShape","registerNode","getPath","getRectPath","initDagre","dagre","rankdir","nodesep","ranksep","_ref","tips","billTypeName","billCode","Graph","heigth","plugins","defaultIntersectBox","modes","edge","style","endArrow","size","stroke","itemClickEvent","wheelScrollZoom","getZoom","calculaterGraphPosition","sourceArr","graphColumnCount","graphRowCount","console","log","val","lenArr","itemArr","sort","a","b","graphWidth","graphHeight","dagreScrollWrap","document","querySelector","firstRender","dagreScrollWrapHeight","clientHeight","dagreScrollWrapWidth","clientWidth","translate","firstChangeZoom","read","currentZoom","zoom","isNode","selectedId","getSelectId","relatedData","find","elem","transtype","onSelect","color","_this$state","relatedData1","getRelated","relatedData2","fill","keyNodeId","sources","targets","getSource","_edges","_ref2","sourceIds","getTargets","_edges2","_ref3","targetIds","Set","nodeIds","ele","handleClick","extractTip","_toast2","content","calculatePostionbBeforeRender","_this$state2","setTimeout","dagreScrollHeight","dagreScrollWidth","dagreScrollH","hasTableDy","dy2","prevDy","zoomX","zoomY","dagreScrollW","Component","_props","parentCom","nextProps","_props2","extractBtns","btnTitle","_react2","createElement","className","height","NCButton","onClick","width"],"mappings":"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","file":"DagreChart.js","sourcesContent":["/**\r\n * 节点信息生成\r\n * **/\r\nconst flowFormatNode = (data) => {\r\n    return data.map( (item, index) => {\r\n        return {\r\n            id: item.act_id,\r\n\t\t\tlabel:{     \r\n\t\t\t\ttext: item.label\r\n\t\t\t},\r\n            name: item.act_name,\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * 流程节点关系数组生成\r\n * **/\r\nconst createEdges = (node) => {\r\n    switch (node.isForward) {\r\n        case '0':\r\n            // 0表示节点是当前节点，当前节点找上下游\r\n            let sourceEdges = node.source.map((item) => {\r\n                return { source: item, target: node.id };\r\n            });\r\n            let targetEdges = node.target.map((item) => {\r\n                return { source: node.id, target: item };\r\n            });\r\n            return [ ...sourceEdges, ...targetEdges ];\r\n            break;\r\n        case '1':\r\n            // 1表示下游节点，下游节点找下游\r\n            return node.target.map((item) => {\r\n                return { source: node.id, target: item };\r\n            });\r\n            break;\r\n        case '-1':\r\n            // -1表示上游节点，上游节点找上游\r\n            return node.source.map((item) => {\r\n                return { source: item, target: node.id };\r\n            });\r\n            break;\r\n        default:\r\n            return [];\r\n            break;\r\n    }\r\n};\r\n/**\r\n * 节点简单拖拽位置变化\r\n * **/\r\nconst dragNodeChangePostion = (graph) => {\r\n    let node;\r\n    let dx;\r\n    let dy;\r\n    graph.on('node:dragstart', ev=>{\r\n      const {item} = ev;\r\n      const model = item.getModel();\r\n      node = item;\r\n      dx = model.x - ev.x;\r\n      dy = model.y - ev.y;\r\n    });\r\n    graph.on('node:drag', ev=>{\r\n      node && graph.update(node, {\r\n        x: ev.x+dx,\r\n        y: ev.y+dy\r\n      });\r\n    });\r\n    graph.on('node:dragend', ev=>{\r\n      node = undefined;\r\n    });\r\n}\r\n\r\n/**\r\n * 生成初始化的当前所属节点\r\n * **/\r\nconst generateInitSelected = (data) => {\r\n    return data.filter( (item, index) => {\r\n        return item.ispassroute\r\n    })\r\n}\r\n\r\n/**\r\n * 判断两个对象数组是否相等\r\n * **/\r\nconst equalArray = (arr1, arr2) => {\r\n    if(!arr1 || !arr2) return false;\r\n    if(Object.prototype.toString.call(arr1).slice(8, -1) !== 'Array' || Object.prototype.toString.call(arr2).slice(8, -1) !== 'Array') return false; \r\n    return JSON.stringify(arr1) === JSON.stringify(arr2)\r\n}\r\n\r\nexport {\r\n    flowFormatNode,\r\n    createEdges,\r\n    dragNodeChangePostion,\r\n    generateInitSelected,\r\n    equalArray\r\n}","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"@antv/g6\")):\"function\"==typeof define&&define.amd?define([\"@antv/g6\"],e):\"object\"==typeof exports?exports[\"plugin.tool.tooltip\"]=e(require(\"@antv/g6\")):t[\"plugin.tool.tooltip\"]=e(t.G6)}(window,function(t){return function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,\"a\",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p=\"\",o(o.s=265)}({265:function(t,e,o){function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}var i=o(3),r=i.Util,u=function(){function t(t){this.options=function(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{},i=Object.keys(o);\"function\"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(o).filter(function(t){return Object.getOwnPropertyDescriptor(o,t).enumerable}))),i.forEach(function(e){n(t,e,o[e])})}return t}({dx:10,dy:10,getTooltip:function(t){var e=t.item;if(e){var o=e.getModel().tooltip;if(o){var n=\"\",i=e.type;return r.isArray(o)?o.forEach(function(t){n+='<li style=\"font-size: 12px;list-style-type: none;\"><span>'+t[0]+\"</span>: \"+t[1]+\"</li>\"}):(i=o.title,o.list.forEach(function(t){n+='<li style=\"font-size: 12px;list-style-type: none;\"><span>'+t[0]+\"</span>: \"+t[1]+\"</li>\"})),'\\n              <div class=\"g6-tooltip\" style=\"\\n                position: absolute;\\n                white-space: nowrap;\\n                zIndex: 8;\\n                transition: visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), left 0.4s cubic-bezier(0.23, 1, 0.32, 1), top 0.4s cubic-bezier(0.23, 1, 0.32, 1);\\n                background-color: rgba(255, 255, 255, 0.9);\\n                box-shadow: 0px 0px 10px #aeaeae;\\n                border-radius: 3px;\\n                color: rgb(87, 87, 87);\\n                line-height: 20px;\\n                padding: 10px 10px 6px 10px;\\n              \">\\n                <h4 class=\"g6-tooltip-title\" style=\"\\n                  margin: 0;\\n                \">'+i+'</h4>\\n                <ul class=\"g6-tooltip-list\" style=\"\\n                  padding: 0;\\n                  margin: 0;\\n                  margin-top: 4px;\\n                \">\\n                  '+n+\"\\n                </ul>\\n              </div>\\n            \"}}return null}},t)}var e=t.prototype;return e.init=function(){var t=this,e=this.graph;e.on(\"mouseenter\",function(e){e.shape&&t.onMouseEnter(e)}),e.on(\"mousemove\",function(e){t.onMouseMove(e)}),e.on(\"mouseleave\",function(e){t.onMouseLeave(e)})},e.onMouseEnter=function(t){var e=this.graph.getGraphContainer(),o=this.options.getTooltip(t),n=this.tooltip;n&&this.tooltip.destroy(),o?((n=r.createDOM(o)).css({position:\"absolute\"}),e.appendChild(n)):n=null,this.tooltip=n},e.onMouseMove=function(t){var e=t.domX,o=t.domY,n=this.tooltip;if(n){var i=this.graph,u=r.getOuterWidth(n),l=r.getOuterHeight(n),p=i.getWidth(),s=i.getHeight();n.css({top:this._getTop(l,s,o),left:this._getLeft(u,p,e)})}},e.onMouseLeave=function(){this.tooltip&&(this.tooltip.destroy(),this.tooltip=null)},e._getTop=function(t,e,o){var n=this.options.dy;return 2*t>=e?\"0px\":o<t+n?o+n+\"px\":o-t-n+\"px\"},e._getLeft=function(t,e,o){var n=this.options.dx;return 2*t>=e?\"0px\":e-o-n<t?o-t-n+\"px\":o+n+\"px\"},e.destroy=function(){this.tooltip&&this.tooltip.destroy()},t}();i.Plugins[\"tool.tooltip\"]=u,t.exports=u},3:function(e,o){e.exports=t}})});\n//# sourceMappingURL=plugin.tool.tooltip.js.map","// 单据追溯图表\r\nimport React, { Component } from 'react';\r\nimport { NCButton } from '../../base';\r\nimport toast from '../../api/toast';\r\nimport { createEdges, dragNodeChangePostion } from './method';\r\nconst G6 = require('@antv/g6');\r\nconst G6Plugins = require('@antv/g6/build/plugins');\r\nimport '@antv/g6/build/plugin.tool.tooltip';\r\n// import '@antv/g6/build/plugin.behaviour.analysis';\r\nG6.track(false);\r\nexport default class DagreChart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: {\r\n\t\t\t\tnodes: this.props.list,\r\n\t\t\t\tedges: createEdges(this.props.list)\r\n\t\t\t}, // 节点和线条数据\r\n\t\t\tselectedId: this.props.selectedId || '', // 选中的节点id，页面初加载时选中节点为基本节点,即基于基本节点构建的上下游关系\r\n\t\t\textract: false, // 是否是路径抽取状态\r\n\t\t\trelatedData: null, // 抽取路径后相关联的节点数据，用来渲染路径抽取视图\r\n\t\t\tgraphHeight: 0, //流程图大于整个可视区的时候，图的高度\r\n\t\t\tgraphWidth: 0, //流程图大于整个可视区的时候，图的宽度\r\n\t\t\twheelScrollZoom: null //滚动鼠标滚轮之后的缩放比例\r\n\t\t};\r\n\t\tthis.dagre = null;//流程图 \r\n\t\tthis.tooltip = null;//节点悬浮内容提示\r\n\t\tthis.graph = null;\r\n\t\tthis.currentZoom = null; //渲染前的画布比例\r\n\t\tthis.firstRender = true;\r\n\t\tthis.dagreScrollH = null; //dagreScroll的高度\r\n\t\tthis.dagreScrollW = null; //dagreScroll的宽度\r\n\t\tthis.dagreScrollWrapHeight = 0;\r\n\t\tthis.dagreScrollWrapWidth = 0;\r\n\t\tthis.firstChangeZoom = false; //打开单据追溯弹框之后，第一次渲染流程图的时候计算zoom，之后不计算\r\n\t\tthis.hasTableDy = null; //显示隐藏表格的时候，值计算一次位移，在流程图小于可视区的时候，在显示表格的时候高度居中\r\n\t\tthis.prevDy = null;//流程图前一次计算的Y轴的位移，是对应modal的body上边而言\r\n\t}\r\n\r\n\tcomponentWillMount(){\r\n\t\tlet { list , parentCom } = this.props;\r\n\t\tif(parentCom !== 'BillTrack'){//父组件不是单据追溯的时候，初始化接收渲染图的数据\r\n\t\t\tthis.getDrawDagreData(list);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.initDagre();\r\n\t\tthis.props.getSelectId && this.props.getSelectId(this.state.selectedId);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tlet { list , size } = nextProps;\r\n\t\tthis.getDrawDagreData(list);\r\n\t\tif(size !== undefined && size !== this.props.size){\r\n\t\t\tif(size == true){//隐藏表格 图下移\r\n\t\t\t\tthis.graph.translate(0, -this.prevDy);\r\n\t\t\t}else{//显示表格 图上移\r\n\t\t\t\tthis.graph.translate(0, this.prevDy);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**接收渲染图的数据\r\n\t * list:array 是BIltrack的index.js中的dataFormat方法返回的数组\r\n\t */\r\n\tgetDrawDagreData = (list) => {\r\n\t\tlet data = {\r\n\t\t\tnodes: list,\r\n\t\t\tedges: []\r\n\t\t};\r\n\t\tlist.forEach((item) => data.edges.push(...createEdges(item)));\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tdata: data,\r\n\t\t\t\textract: false\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.renderDagre(this.changeColor(this.state.data));\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trenderShape = (G6, shape) => {\r\n\t\tif (shape === 'react') {\r\n\t\t\treturn G6.registerNode('rect', {\r\n\t\t\t\tgetPath: function getPath(item) {\r\n\t\t\t\t\tvar width = 136; // 一半宽\r\n\t\t\t\t\tvar height = 50; // 一半高\r\n\t\t\t\t\treturn G6.Util.getRectPath(-width / 2, -height / 2, width, height, 10);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// 初始化渲染并绑定节点事件\r\n\tinitDagre = () => {\r\n\t\tthis.renderShape(G6, 'react');\r\n\t\tthis.dagre = new G6Plugins['layout.dagre']({\r\n\t\t\trankdir: 'LR', // 左右方向\r\n\t\t\tnodesep: 30, // 节点间距\r\n\t\t\tranksep: 30 // 层级间距\r\n\t\t});\r\n\t\tthis.tooltip = new G6.Plugins['tool.tooltip']({\r\n\t\t\tgetTooltip({item}) {\r\n\t\t\t  const model = item.getModel();\r\n\t\t\t  if(model){\r\n\t\t\t\t  let title = model.billTypeName , \r\n\t\t\t\t  \t  billcode = model.billCode;\r\n\t\t\t\t  let tips = `<ul class=\"dagre-toolTip\">\r\n\t\t\t\t\t\t\t\t<li class=\"dagre-toolTip-title\">单据名称: ${title}</li>\r\n\t\t\t\t\t\t\t\t<li class=\"dagre-toolTip-billcode\">单据编号: ${billcode}</li>\r\n\t\t\t\t\t\t\t</ul>`;\r\n\t\t\t\t\treturn tips;\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  });\r\n\t\tthis.graph = new G6.Graph({\r\n\t\t\tid: 'mountNode', //dom Id\r\n\t\t\theigth: 250, // 网格的高度(不太管用，需进一步验证)\r\n\t\t\tplugins: [ this.dagre , this.tooltip ],\r\n\t\t\tdefaultIntersectBox: 'rect', // 使用矩形包围盒\r\n\t\t\tmodes: {\r\n\t\t\t\tdefault: [ 'panBlank', 'panNode', 'wheelZoom' ]\r\n\t\t\t}\r\n\t\t});\r\n\t\t//流程线条箭头设置\r\n\t\tthis.graph.edge({\r\n\t\t\tstyle: {\r\n\t\t\t\tendArrow: true\r\n\t\t\t},\r\n\t\t\tlabel(model) {\r\n\t\t\t\treturn model.shape;\r\n\t\t\t},\r\n\t\t\tsize: 1\r\n\t\t});\r\n\r\n\t\tthis.graph.node({\r\n\t\t\tshape: 'rect',\r\n\t\t\tstyle: {\r\n\t\t\t\tstroke: '#CCEAFF'\r\n\t\t\t},\r\n\t\t\t// tooltip(model) {//每个节点里显示的标题和billcode\r\n\t\t\t// \tlet content = model && model.label && model.label.text ? model.label.text.split('\\n'): [];\r\n\t\t\t// \tconsole.log(content)\r\n\t\t\t// \tif(content.length){\r\n\t\t\t// \t\treturn [ \r\n\t\t\t// \t\t\t[ '单据名称', content[0] ],\r\n\t\t\t// \t\t\t[ '单据编号', content[1] ]\r\n\t\t\t// \t\t];\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t});\r\n\t\tthis.itemClickEvent();\r\n\t\tthis.graph.on('wheel', (ev) => {\r\n\t\t\tlet wheelScrollZoom = this.graph.getZoom();\r\n\t\t\tthis.setState({\r\n\t\t\t\twheelScrollZoom: wheelScrollZoom\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\t//计算流程图的宽高，用途：让流程图居中显示 g6没有这个功能的API\r\n\tcalculaterGraphPosition = (data) => {\r\n\t\tlet graph = this.graph;\r\n\t\t/*\r\n\t\tsourceArr是节点sourceList和targetList的集合，数据套数据[[],[],...],\r\n\t\t流程图的列数graphColumnCount是sourceArr的长度加一，\r\n\t\t流程图的行数graphRowCount是sourceArr的子项最长一项的长度，\r\n\t\t */\r\n\t\tlet sourceArr = [];\r\n\t\tlet graphColumnCount = 0;\r\n\t\tlet graphRowCount = 0;\r\n\t\tif (data.nodes.length > 1) {\r\n\t\t\t//流程图有多个节点的时候\r\n\t\t\tconsole.log('多个节点');\r\n\t\t\tdata.nodes.forEach((val) => {\r\n\t\t\t\tif (val.source.length) {\r\n\t\t\t\t\tsourceArr.push(val.source);\r\n\t\t\t\t}\r\n\t\t\t\tif (val.target.length) {\r\n\t\t\t\t\tsourceArr.push(val.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (sourceArr.length) {\r\n\t\t\t\t//console.log('sourceArr',sourceArr)\r\n\t\t\t\tgraphColumnCount = sourceArr.length + 1;\r\n\t\t\t\tlet lenArr = [];\r\n\t\t\t\tsourceArr.forEach((itemArr, i) => {\r\n\t\t\t\t\tlenArr.push(itemArr.length);\r\n\t\t\t\t});\r\n\t\t\t\tlenArr.sort((a, b) => b - a);\r\n\t\t\t\tgraphRowCount = lenArr[0];\r\n\r\n\t\t\t\tlet graphWidth = graphColumnCount * 136 + (graphColumnCount - 1) * 30;\r\n\t\t\t\tlet graphHeight = graphRowCount * 50 + (graphRowCount - 1) * 30;\r\n\r\n\t\t\t\tlet dagreScrollWrap = document.querySelector('.dagreScrollWrap');\r\n\t\t\t\tif (dagreScrollWrap && this.firstRender) {\r\n\t\t\t\t\tlet dagreScrollWrapHeight = dagreScrollWrap.clientHeight;\r\n\t\t\t\t\tlet dagreScrollWrapWidth = dagreScrollWrap.clientWidth;\r\n\t\t\t\t\tthis.dagreScrollWrapHeight = dagreScrollWrapHeight;\r\n\t\t\t\t\tthis.dagreScrollWrapWidth = dagreScrollWrapWidth;\r\n\r\n\t\t\t\t\tlet dy = (dagreScrollWrapHeight - graphHeight) / 2;\r\n\t\t\t\t\tlet dx = (dagreScrollWrapWidth - graphWidth) / 2;\r\n\t\t\t\t\tif (this.dagreScrollWrapHeight) {\r\n\t\t\t\t\t\tif (dx >= 0 && dy >= 0) {\r\n\t\t\t\t\t\t\tgraph.translate(dx, dy);\r\n\t\t\t\t\t\t} else if (dx >= 0 && dy <= 0) {\r\n\t\t\t\t\t\t\tgraph.translate(dx, 0);\r\n\t\t\t\t\t\t} else if (dy >= 0 && dx <= 0) {\r\n\t\t\t\t\t\t\tgraph.translate(0, dy);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tgraphWidth: graphWidth,\r\n\t\t\t\t\t\t\tgraphHeight: graphHeight\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.firstChangeZoom = true;\r\n\t\t\t\t\t\tthis.firstRender = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (data.nodes.length === 1) {\r\n\t\t\t//只有一个节点的时候\r\n\t\t\tconsole.log('一个节点');\r\n\t\t\tlet dagreScrollWrap = document.querySelector('.dagreScrollWrap');\r\n\t\t\tif (dagreScrollWrap && this.firstRender) {\r\n\t\t\t\tlet dagreScrollWrapHeight = dagreScrollWrap.clientHeight;\r\n\t\t\t\tlet dagreScrollWrapWidth = dagreScrollWrap.clientWidth;\r\n\t\t\t\tthis.dagreScrollWrapHeight = dagreScrollWrapHeight;\r\n\t\t\t\tthis.dagreScrollWrapWidth = dagreScrollWrapWidth;\r\n\t\t\t\tlet dy = (dagreScrollWrapHeight - 50) / 2;\r\n\t\t\t\tlet dx = (dagreScrollWrapWidth - 136) / 2;\r\n\t\t\t\tgraph.translate(dx, dy);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgraphWidth: 136,\r\n\t\t\t\t\tgraphHeight: 50\r\n\t\t\t\t});\r\n\t\t\t\tthis.firstRender = false;\r\n\t\t\t\tthis.firstChangeZoom = true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t// 渲染关系图\r\n\trenderDagre = (data) => {\r\n\t\t//渲染出流程图会走两次这个方法\r\n\t\tthis.calculaterGraphPosition(data);\r\n\t\tlet graph = this.graph;\r\n\t\tdragNodeChangePostion(graph);\r\n\t\tgraph.read(data);\r\n\t\tif (graph && this.currentZoom) {\r\n\t\t\tgraph.zoom(this.currentZoom);\r\n\t\t}\r\n\t};\r\n\r\n\t// 节点的点击事件\r\n\titemClickEvent = () => {\r\n\t\tthis.graph.on('click', (ev) => {\r\n\t\t\tif (ev.item && ev.item.isNode) {\r\n\t\t\t\tlet selectedId = ev.item.id;\r\n\t\t\t\tif (selectedId !== this.state.selectedId) {\r\n\t\t\t\t\tthis.setState({ selectedId }, () => {\r\n\t\t\t\t\t\tthis.props.getSelectId && this.props.getSelectId(selectedId);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (this.state.extract) {\r\n\t\t\t\t\t\tlet data = this.changeColor(this.state.relatedData);\r\n\t\t\t\t\t\tthis.setState({ relatedData: data }, () => this.renderDagre(data));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet data = this.changeColor(this.state.data);\r\n\t\t\t\t\t\tthis.setState({ data }, () => this.renderDagre(data));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.graph.on('dblclick', (ev) => {\r\n\t\t\tif (ev.item && ev.item.type === 'node') {\r\n\t\t\t\tlet selectedId = ev.item.model.id;\r\n\t\t\t\tlet type = this.state.data.nodes.find((elem) => {\r\n\t\t\t\t\treturn elem.id == selectedId;\r\n\t\t\t\t}).type;\r\n\t\t\t\tlet transtype = this.state.data.nodes.find((elem) => {\r\n\t\t\t\t\treturn elem.id == selectedId;\r\n\t\t\t\t}).transtype;\r\n\t\t\t\tthis.props.onSelect && this.props.onSelect(selectedId, type, transtype);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * 改变选中节点的颜色\r\n\t */\r\n\tchangeColor = (data) => {\r\n\t\tthis.currentZoom = this.graph.getZoom();\r\n\t\tdata.nodes.forEach((item) => {\r\n\t\t\tif (item && item.color) {\r\n\t\t\t\titem.color = '#fff';\r\n\t\t\t}\r\n\t\t});\r\n\t\tdata.edges.forEach((item) => {\r\n\t\t\tif (item && item.color) {\r\n\t\t\t\titem.color = '#888';\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet { selectedId, extract, relatedData } = this.state;\r\n\t\tif (selectedId) {\r\n\t\t\tlet relatedData1 = this.getRelated(selectedId, this.state.data); // 未抽取视图的相关联数据\r\n\t\t\tlet relatedData2 = extract ? this.getRelated(selectedId, relatedData) : { nodes: [], edges: [] }; // 抽取路径后视图的相关联数据\r\n\t\t\tlet nodes = [ ...relatedData1.nodes, ...relatedData2.nodes ];\r\n\t\t\tlet edges = [ ...relatedData1.edges, ...relatedData2.edges ];\r\n\t\t\tif (nodes) {\r\n\t\t\t\tnodes.forEach((item) => {\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tif (item.id === this.state.selectedId) {\r\n\t\t\t\t\t\t\tif(item.label && item.label.fill){\r\n\t\t\t\t\t\t\t\titem.label.fill = '#007ACE';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.color = '#CCEAFF';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif(item.label && item.label.fill){\r\n\t\t\t\t\t\t\t\titem.label.fill = '#F87321';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.color = '#FFE19D';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tedges.forEach((item) => {\r\n\t\t\t\t\tif (item && item.color) {\r\n\t\t\t\t\t\titem.color = 'green';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data;\r\n\t};\r\n\r\n\t/**\r\n\t * 查找上下游的节点和路径 参数data: 查找相关数据的原始数据范围\r\n\t */\r\n\tgetRelated = (keyNodeId, data) => {\r\n\t\tlet edges = [];\r\n\t\tlet sources = [];\r\n\t\tlet targets = [];\r\n\t\tlet getSource = (id) => {\r\n\t\t\tlet sourceEdges = data.edges.filter(({ target }) => target === id);\r\n\t\t\tlet sourceIds = sourceEdges.map((item) => item.source);\r\n\t\t\tedges.push(...sourceEdges);\r\n\t\t\tsources.push(...sourceIds);\r\n\t\t\tif (sourceIds.length > 0) {\r\n\t\t\t\tsourceIds.forEach((item) => getSource(item));\r\n\t\t\t}\r\n\t\t};\r\n\t\tlet getTargets = (id) => {\r\n\t\t\tlet targetEdges = data.edges.filter(({ source }) => source === id);\r\n\t\t\tlet targetIds = targetEdges.map((item) => item.target);\r\n\t\t\tedges.push(...targetEdges);\r\n\t\t\ttargets.push(...targetIds);\r\n\t\t\tif (targetIds.length > 0) {\r\n\t\t\t\ttargetIds.forEach((item) => getTargets(item));\r\n\t\t\t}\r\n\t\t};\r\n\t\tgetSource(keyNodeId);\r\n\t\tgetTargets(keyNodeId);\r\n\t\tedges = [ ...new Set(edges) ];\r\n\t\tlet nodeIds = [ ...new Set([ ...sources, keyNodeId, ...targets ]) ]; // 用 Set 去重\r\n\t\tlet nodes = nodeIds.map((item) => {\r\n\t\t\treturn data.nodes.find((ele) => ele.id === item);\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tedges,\r\n\t\t\tnodes\r\n\t\t};\r\n\t};\r\n\r\n\t// 抽取路径按钮的点击事件\r\n\thandleClick = () => {\r\n\t\tlet { extractTip } = this.props;\r\n\t\tif (!this.state.extract) {\r\n\t\t\tif (this.state.selectedId) {\r\n\t\t\t\tthis.setState(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\textract: !this.state.extract,\r\n\t\t\t\t\t\trelatedData: this.getRelated(this.state.selectedId, this.state.data)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tlet data = this.changeColor(this.state.relatedData);\r\n\t\t\t\t\t\tthis.renderDagre(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\ttoast({ color: 'warning', content: extractTip });\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\textract: !this.state.extract\r\n\t\t\t});\r\n\t\t\tthis.renderDagre(this.state.data);\r\n\t\t}\r\n\t};\r\n\r\n\t//每次流程图渲染的时候，让图中部居中\r\n\tcalculatePostionbBeforeRender = (size) => {\r\n\t\tlet { graphHeight, graphWidth, wheelScrollZoom } = this.state;\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet dagreScrollWrap = document.querySelector('.dagreScrollWrap');\r\n\t\t\tif (dagreScrollWrap) {\r\n\t\t\t\t//console.log('graphHeight , graphWidth ',graphHeight , graphWidth ,this.firstRender)\r\n\t\t\t\tlet dagreScrollHeight = dagreScrollWrap.clientHeight;\r\n\t\t\t\tlet dagreScrollWidth = dagreScrollWrap.clientWidth;\r\n\t\t\t\t//console.log('dagreScrollHeight , dagreScrollWidth ',dagreScrollHeight , dagreScrollWidth)\r\n\r\n\t\t\t\tif (dagreScrollHeight - graphHeight >= 0) {\r\n\t\t\t\t\t//显示表格，且流程图高度小于于可视区\r\n\t\t\t\t\tif (!this.dagreScrollH) {\r\n\t\t\t\t\t\tthis.dagreScrollH = dagreScrollHeight;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (graphHeight) {\r\n\t\t\t\t\t\t\tif (size === false ) {//显示表格的时候\r\n\t\t\t\t\t\t\t\tif(!this.hasTableDy){\r\n\t\t\t\t\t\t\t\t\tlet dy2 = (dagreScrollHeight - graphHeight) / 2;\r\n\t\t\t\t\t\t\t\t\tlet dy1 = (dagreScrollHeight * 2 - graphHeight) / 2;\r\n\t\t\t\t\t\t\t\t\tlet dy = dy2 - dy1;\r\n\t\t\t\t\t\t\t\t\tthis.hasTableDy = dy2;\r\n\t\t\t\t\t\t\t\t\tthis.graph.translate(0, dy);\r\n\t\t\t\t\t\t\t\t\tthis.prevDy = dy;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (dagreScrollHeight - graphHeight < 0) {\r\n\t\t\t\t\t//流程图高度大于可视区\r\n\t\t\t\t\tif (dagreScrollHeight) {\r\n\t\t\t\t\t\tthis.dagreScrollH = graphHeight;\r\n\t\t\t\t\t\tif (this.firstChangeZoom) {\r\n\t\t\t\t\t\t\t//在流程图的宽高大于dagreScrollWrap宽高的时候，缩放比例按照差值更多的一方来计算\r\n\t\t\t\t\t\t\tthis.firstChangeZoom = false;\r\n\t\t\t\t\t\t\tlet zoomX = dagreScrollWidth / graphWidth;\r\n\t\t\t\t\t\t\tlet zoomY = dagreScrollHeight / graphHeight;\r\n\t\t\t\t\t\t\tif (zoomX < zoomY) {\r\n\t\t\t\t\t\t\t\tthis.currentZoom = zoomX;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.currentZoom = zoomY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (wheelScrollZoom) {\r\n\t\t\t\t\t\t\t\tthis.graph.zoom(wheelScrollZoom);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.graph.zoom(this.currentZoom);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (dagreScrollWidth - graphWidth >= 0) {\r\n\t\t\t\t\t//流程图宽度小于可视区\r\n\t\t\t\t\tif (!this.dagreScrollW) {\r\n\t\t\t\t\t\tthis.dagreScrollW = dagreScrollWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.dagreScrollW) {\r\n\t\t\t\t\t\tthis.dagreScrollH = graphWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//console.log('this.dagreScrollH',this.dagreScrollH )\r\n\t\t\t//console.log('this.dagreScrollW',this.dagreScrollW)\r\n\t\t}, 50);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//size 表格是否显示的控制参数 Boolean  默认是false不显示表格 true是显示表格\r\n\t\tlet { size, extractBtns } = this.props;\r\n\t\t\r\n\t\tlet btnTitle;\r\n\t\tif (extractBtns) {\r\n\t\t\tbtnTitle = this.state.extract ? extractBtns[0] : extractBtns[1];\r\n\t\t}\r\n\t\t\t//console.log('this.dagreData-----------',this.state.data )\r\n\t\tthis.calculatePostionbBeforeRender(size);\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${this.props.className ? this.props.className : ''} dagre-area `}\r\n\t\t\t\tstyle={{ height: `${size ? '96%' : '50%'}` }}\r\n\t\t\t>\r\n\t\t\t\t{btnTitle && (\r\n\t\t\t\t\t<NCButton className=\"button-primary dagre-extract\" onClick={this.handleClick}>\r\n\t\t\t\t\t\t{btnTitle}\r\n\t\t\t\t\t</NCButton>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"dagreScrollWrap\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"dagreScroll\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: `${this.dagreScrollH ? this.dagreScrollH + 'px' : '100%'}`,\r\n\t\t\t\t\t\t\twidth: `${this.dagreScrollW ? this.dagreScrollW + 'px' : '100%'}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div id=\"mountNode\" className=\"dagre\" style={{ width: '100%' }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""}